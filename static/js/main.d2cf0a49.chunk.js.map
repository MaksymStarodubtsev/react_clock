{"version":3,"sources":["Components/Clock/Clock.jsx","App.js","index.js"],"names":["Clock","state","date","undefined","this","interval","setInterval","setState","Date","toLocaleTimeString","console","log","prevState","clockName","props","clearInterval","React","Component","App","clockVisible","visibilityOn","visibilityOff","randomNameForClock","name","Math","ceil","random","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAb,4MACEC,MAAQ,CACNC,UAAMC,GAFV,uDAKE,WAAqB,IAAD,OAClBC,KAAKC,SAAWC,aAAY,WAC1B,EAAKC,SAAS,CAAEL,MAAM,IAAIM,MAAOC,uBAEjCC,QAAQC,IAAI,EAAKV,MAAMC,QACtB,OAVP,gCAaE,SAAmBU,GACjB,IAAQC,EAAcT,KAAKU,MAAnBD,UAEJA,IAAcD,EAAUC,WAE1BH,QAAQC,IAAR,qCAA0CC,EAAUC,UAApD,sBACKA,MAnBX,kCAuBE,WACEE,cAAcX,KAAKC,YAxBvB,oBA2BE,WACE,OACE,oCACE,2CACA,2CAEG,IACAD,KAAKH,MAAMC,WAlCtB,GAA2Bc,IAAMC,WCuDlBC,G,kNArDbjB,MAAQ,CACNkB,cAAc,EACdN,UAAW,S,EAGbO,aAAe,WACb,EAAKb,SAAS,CACZY,cAAc,K,EAIlBE,cAAgB,WACd,EAAKd,SAAS,CACZY,cAAc,K,EAIlBG,mBAAqB,WACnB,IAAMC,EAAOC,KAAKC,KAAqB,GAAhBD,KAAKE,UAE5B,EAAKnB,SAAS,CACZM,UAAWU,K,4CAIf,WACE,OACE,oCACE,4BACEI,KAAK,SACLC,QAASxB,KAAKgB,cAFhB,iBAOA,4BACEO,KAAK,SACLC,QAASxB,KAAKiB,eAFhB,kBAMA,4BACEM,KAAK,SACLC,QAASxB,KAAKkB,oBAFhB,mBAMElB,KAAKH,MAAMkB,cAAgB,kBAAC,EAAD,CAAON,UAAWT,KAAKH,MAAMY,iB,GAhDhDG,IAAMC,YCAxBY,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.d2cf0a49.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    date: undefined,\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      this.setState({ date: new Date().toLocaleTimeString() });\n      // eslint-disable-next-line no-console\n      console.log(this.state.date);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevState) {\n    const { clockName } = this.props;\n\n    if (clockName !== prevState.clockName) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${prevState.clockName}\n      to ${clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return (\n      <>\n        <h1>React clock</h1>\n        <p>\n          Current time:\n          {' '}\n          {this.state.date}\n        </p>\n      </>\n\n    );\n  }\n}\n\nClock.propTypes = {\n  clockName: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport { Clock } from './Components/Clock';\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    clockVisible: true,\n    clockName: 'clock',\n  }\n\n  visibilityOn = () => {\n    this.setState({\n      clockVisible: true,\n    });\n  }\n\n  visibilityOff = () => {\n    this.setState({\n      clockVisible: false,\n    });\n  }\n\n  randomNameForClock = () => {\n    const name = Math.ceil(Math.random() * 10);\n\n    this.setState({\n      clockName: name,\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <button\n          type=\"button\"\n          onClick={this.visibilityOn}\n        >\n          turn on clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.visibilityOff}\n        >\n          turn off clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.randomNameForClock}\n        >\n          Set random name\n        </button>\n        { this.state.clockVisible && <Clock clockName={this.state.clockName} />}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}